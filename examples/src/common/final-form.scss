// Adapted from Styles.js from various react-final-form examples (they have slight variations), including:
// - https://codesandbox.io/s/github/final-form/react-final-form/tree/master/examples/focus-first-error
// Adapted from styled-components tagged template literals to plain scss.
//
// Compile with:
//   cd examples/
//   sass --watch src/common/:public/build/
//
// We can have other examples that are *not* based on react-final-form examples,
// but the quickest way to get a bunch of examples is to port the
// react-final-form examples, and this allows us to use the same HTML as-is.
// By making the translated version as identical as possible, it also makes it
// easier to compare against the react-final-form, for those migrating from that
// library, to learn how to adapt their own react-final-form code to work with
// svelte-final-form, and it makes the differences easier to spot.
//
// By making an equivalent/analogous version of every example that "they" have,
// it makes it clear to prospective users that we have thought of and tested
// with at least every use case that is demonstrated in the react-final-form
// corpus of examples.

@mixin btn($light, $dark) {
  white-space: nowrap;
  display: inline-block;
  border-radius: 5px;
  padding: 5px 15px;
  font-size: 16px;
  color: white;
  cursor: pointer; /* Added */
  &:visited {
    color: white;
  }
  background-image: linear-gradient($light, $dark);
  border: 1px solid $dark;
  &:hover {
    background-image: linear-gradient($light, $dark);
    &[disabled] {
      background-image: linear-gradient($light, $dark);
    }
  }
  &:visited {
    color: black;
  }
  &[disabled] {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

.final-form-example {
  font-family: sans-serif;

  h1 {
    text-align: center;
    color: #222;
  }

  h2 {
    text-align: center;
    color: #222;
  }

  /*
  // Removed. This should have a more specific selector.
  & > div {
    text-align: center;
  }

  a {
    display: block;
    text-align: center;
    color: #222;
  }

  p {
    max-width: 500px;
    margin: 10px auto;
    & > a {
      display: inline;
    }
  }
	*/

  /*
  // Removed. Unused.
  .loading {
    font-size: 2em;
    font-weight: bold;
    text-align: center;
    margin: 50px;
  }
  */

  & > form,
  & > div.form {
    margin: 10px auto;
  }
  form,
  div.form {
    text-align: left;
    max-width: 500px;
    margin: 10px;
    border: 1px solid #ccc;
    padding: 20px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
    border-radius: 3px;
    position: relative;

    & > div {
      display: flex;
      flex-flow: row nowrap;
      line-height: 2em;
      // margin: 5px;
      position: relative;
      // The fields weren't vertically centered (there was too much padding-bottom) within the div when I used upstream:
      // padding: 8px 5px;
      padding: 6px 5px 0 5px;
      border: 1px solid transparent;
      &.active {
        background-color: paleturquoise;
        border-color: turquoise;
      }
      & > label {
        color: #333;
        width: 110px;
        min-width: 60px;
        font-size: 1em;
        line-height: 32px;
      }
      & > input,
      & > select,
      & > textarea {
        flex: 1;
        padding: 3px 5px;
        font-size: 1em;
        margin-left: 15px;
        border: 1px solid #ccc;
        border-radius: 3px;
      }
      & > input[type='checkbox'] {
        margin-top: 7px;
      }
      & > div {
        margin-left: 16px;
        & > label {
          margin-left: 0;
          display: block;
          & > input {
            margin-right: 3px;
          }
        }
      }
      & > span {
        line-height: 32px;
        margin-left: 10px;
        color: #800;
        font-weight: bold;
      }
      & > button.remove {
        // ${btnDanger};
      }
    }
    & > .buttons {
      display: flex;
      flex-flow: row nowrap;
      justify-content: center;
      margin-top: 15px;
    }

    .error {
      display: flex;
      font-weight: bold;
      color: #800;
      flex-flow: row nowrap;
      justify-content: center;
    }
    button {
      margin: 0 10px;
      &[type='submit'] {
        // ${btnPrimary};
        @include btn(#4f93ce, #285f8f);
      }
      &[type='button'] {
        // ${btnDefault};
        @include btn(#ffffff, #d5d5d5);
        color: #555;
      }
    }
    pre {
      border: 1px solid #ccc;
      background: rgba(0, 0, 0, 0.1);
      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);
      padding: 20px;
    }
  }
}


// Added
.form-container-row {
  display: flex;
  flex-flow: row nowrap
}

:not(.form-container-row) .form-container-row {
}
